<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xd43D41U5x</title>
    <link>https://xd43d41u5x.github.io/malwaREAnalysis/</link>
    <description>Recent content on xd43D41U5x</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://xd43d41u5x.github.io/malwaREAnalysis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3CX</title>
      <link>https://xd43d41u5x.github.io/malwaREAnalysis/posts/3cx/</link>
      <pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xd43d41u5x.github.io/malwaREAnalysis/posts/3cx/</guid>
      <description>Summary Physical Files Involved 3CXDesktopApp.exe - Has a dependency for ffmpeg.dll. This initial exe appears to be clean. ffmpeg.dll - This dll has been modified at the entry point, so that even upon loading of the dll (no export calls), the malicious code would run. Note: this is an expected file for an electron app. d3dcompiler_47.dll - This dll functions as normal, however has RC4 encrypted data added in the overlay.</description>
    </item>
    
    <item>
      <title>Malicious Chrome Ext</title>
      <link>https://xd43d41u5x.github.io/malwaREAnalysis/posts/stegochrome/</link>
      <pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://xd43d41u5x.github.io/malwaREAnalysis/posts/stegochrome/</guid>
      <description>Analysis To start, we will only be looking at the two files of interest and not the whole thing (background.js and promo.jpg). By looking in background.js, there is an area that stands out, with a variable named “Promo” and a function defined/called there.
A couple of notes before digging into how this works.
It&amp;rsquo;s referencing a jpg file (really a png) and it&amp;rsquo;s drawing/loading that image.
So at some point we will realize this is a requirement and since VSCode uses Node.</description>
    </item>
    
    <item>
      <title>SideFury</title>
      <link>https://xd43d41u5x.github.io/malwaREAnalysis/posts/sidefury/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://xd43d41u5x.github.io/malwaREAnalysis/posts/sidefury/</guid>
      <description>Analysis I’ll start by saying this probably isn’t the right name, but based on write-ups I’ve seen similar but not exactly the same items. It feels like a mash up between SideCopy/SideWinder and NightFury.
As a quick summary here is what the overall flow looks like.
This attack starts with a zip file being delivered to the user. The zip file contains what would appear to an end user as a “docx”, however it&amp;rsquo;s really a link file which is abusing the target parameter to pull external content, in this case the 2nd stage to be launched with mshta.</description>
    </item>
    
  </channel>
</rss>
